=head2 invert_kernel 

Given a kernel (as a 2-D PDL), find its inverse kernel or a close
approximation.  You feed in the kernel and an epsilon (default 10^-2) 
that forms a lower cutoff for Fourier components. 

=cut

sub invert_kernel {
    my $k = shift;
    my $epsilon = shift || 1e-2;
    my $alpha = shift || 0.5;

    $siz = pdl dims $k;

    $kr = $k->range(floor(-$siz/2),2*$siz,'t')->sever;
    $ki = zeroes $kr;

    fftnd($kr,$ki);
    
     $km = sqrt($kr*$kr + $ki*$ki);
    
    $km2 = pow($km,$alpha) / ( pow($km,$alpha+1) + $epsilon );
##     $km2 = sqrt($km) / ( sqrt($km * $km*$km) + $epsilon );
##     $km2 = 1/($km+$epsilon);
     $ka2 = -$ka;
    
    $ki .= sin($ka2) * $km2;
    $kr .= cos($ka2) * $km2;
    
    $kra = $kr->copy;
    $kia = $ki->copy;

    ifftnd($kr,$ki);
    
    return $kr->range([($kr->dim(0)+1)/2,($kr->dim(1)+1)/2],[$kr->dims],'p')->sever->range(ceil($siz/2),$siz)->sever;
}
