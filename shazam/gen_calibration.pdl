=head2 gen_calibration - make a calibration object, given dark and flat field data

=for usage

$cal = gen_calibration($darkfit, $flats, [$order], [$intended_exp])

=for ref

You hand over a dark fit (from gen_darks) and a $flats sequence (from
collect_exposure_sequence) and you get back a prefrobnicated
calibration object. This step handles the nonlinear calibration of the
cameras, but not flat field effects due to the polarizer rotation;
that should be handled separately by dividing out polarized flat
fields.

If you specify the intended exposure time then the $darks are discarded and 
the return value gets just a single dark frame for the intended exposure time.

The returned calibration PDL is a polynomial for each location in the image, relating
value in the image (independent variable) to equivalent exposure time during
the calibration sequence (dependent variable).

=for author

Craig DeForest

=for history 

0.1 9-May-2009
0.2 21-April-2015

=cut

use strict;
use PDL::Options;

sub gen_calibration {
    my $darks = shift;
    my $flats = shift;
    my $u_opt = shift // {};

    my %opt;

    %opt = parse( {
    	 min => 10,
	 max => 65000,
	 order => 4
    	 }, $u_opt);

    my  $fl = $flats->[1]->copy;

    # Dark-correct the flat exposure files
    print "Dark-correcting flat exposures...\n";
    for my $i(0..$flats->[0]->nelem-1) {
	my $d = dark( $darks, $flats->[0]->at($i) );
	$fl->(($i)) -= $d;
    }

    print "Fitting the corrected exposures...\n";
    print "fl is ".join("x",$fl->dims)."\n";
    my $out = poly_fit_range($fl, $flats->[0], $opt{order}, $opt{min}, $opt{max});
    return $out;
}

