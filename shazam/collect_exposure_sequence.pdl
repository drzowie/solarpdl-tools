=head2 collect_exposure_sequence - gather an exposure scan for dark or flat cal

=for usage

$sequence = collect_exposure_sequence($directory);

=for ref

The input is a string containing a directory to search.  Relative
pathnames are evaluated relative to "/data" or the environment
variable "SHAZAM_DATA_DIR".  The output is an array ref containing two
fields: an N-PDL containing the exposure times found, in increasing
order; and an  NxWxH-PDL containing the exposure data.

=for author

Craig DeForest

=for history

v0.1 - 8-May-2009

=cut

sub collect_exposure_sequence {
    my $dir = shift;
    
    unless($dir =~ m:^[\/\.]:) {
	$basedir = $ENV{'SHAZAM_DATA_DIR'} || "/data";
	$dir = "$basedir/$dir";
    }
    print "searching $dir/...\n";
    @files = sort { my $ah = rfits($a,{data=>0});
		    my $an = $ah->{EXPTIME};
		    my $bh = rfits($b,{data=>0});
		    my $bn = $bh->{EXPTIME};
		    $an <=> $bn;
                   } 
               <$dir/*_e????.fits $dir/*_e????_n???.fits>;
    
    print "collect_exposure_sequence: found ".(@files+0)." files\n";
    
    
    my @times = ();
    my @n = ();
    my @ims = ();
    my @slots=();

    my $new;
    # Now run through the files, sorting where they go.
    print "Scanning..."; flush STDOUT;
    for $i(0..$#files) {
        $new = rfits($files[$i],{hdrcpy=>1,data=>0});
	my $nt = $new->{EXPTIME};
	if(@n==0 || $nt != $times[$#times]) {
	    push(@times,$nt);
	    push(@n,1);
	} 
	else {
	    $n[$#n]++;
	}
	$slots[$i] = $#n;
    }

    print "Allocating ".(0+@n)." image planes..."; flush STDOUT;
    $out = zeroes(float, $new->{NAXIS1},$new->{NAXIS2}, 0+@n);
    $o2 = $out->mv(-1,0);

    print "Accumulating..."; flush STDOUT;
    $n = float pdl(@n);
    for $i(0..$#files) {
	$o2->(($slots[$i])) += rfits($files[$i]);
	if($i%100==0){print "."; flush STDOUT;}
    }
    
    print "Dividing..."; flush STDOUT;
    $o2 /= $n;
    
    print "ok\n";

    return ([pdl(@times), $o2]);
}
    
    

