=head2 jpeg_enhance - Enhance a JPEG image by the Nosratinia method

=for sig

  Signature: jpeg_enhance(A());

=for ref

Nosratinia noticed that JPEG encoding is itself a type of spatial
filtering, and can be used to eliminate 8x8 pixel-box artifacts within
JPEG images.  C<jpeg_enhance> re-encodes an image 32 times with a
checkerboard array of phases relative to the original pixel grid, and 
decodes all 32 images.  The average of the 32 decoded images (averaged with 
the correct phase) is returned.

This is basically an expensive way of spatially filtering the data, but
it is surprisingly sophisticated at removing "ringing" artifacts:  the phase
of the ringing varies across the samples and so ringing artifacts tend
to cancel themselves out.  The result is significantly better than 
a simple spatial filter.

=cut

sub jpeg_enhance {
  my $im0 = float(shift);
  my $flags = shift;
  my $im = $im0;
  if($im->dim(0) == 3) {
    $im = $im->reorder(1,2,0);
  }

  print "im is ",join("x",$im->dims),"\n";
  my $f = "/tmp/$$.jpg";

  my $out = zeroes($im);

  for my $i(0..7) {
    for my $j(0..7) {

      my $im1 = $im->range([$i,$j],[$im->dim(0),$im->dim(1)],'p');
      if($im1->ndims == 3) {

	wpic($im1->reorder(2,0,1),$f,{FLAGS=>$flags});

	$im1 = rpic($f)->reorder(1,2,0);
      } else {
	wpic($im1,$f,{FLAGS=>$flags});
	$im1 = float(rpic($f));
      }
      $out += $im1->range([-$i,-$j],[$im->dim(0),$im->dim(1)],'p');
    }
  }
  
  $omean = $out->avg;
  $imean = $im->avg;
  $ostdev= ($out-$omean)->abs->avg;
  $istdev= ($im-$imean)->abs->avg;
  
  $out *= $istdev/$ostdev;
  $out += $imean - $omean*($istdev/$ostdev);

  return $out->reorder(2,0,1)
    if($out->dim(2) == 3 && $im->dim(0) == 3) ;
  return $out;
}
      
