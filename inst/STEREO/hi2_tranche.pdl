##############################
# hi2_tranche - process one time interval of hi2 data, which can
# be handled using a single collection of correlations and dist-params files
# made from the center of the time interval.
#
# The final merger is not handled with hi2_tranche - you have to do that separately with merge_batches.
#
# You feed in a central time for the tranche, and hi2_tranche finds the relevant files, symlinks them, and
# runs hi2_metapipeline on them.  
#
# By default, the tranche duration is 2 months, centered on the time you give.
#
# CED 14-Jan-2013

use Date::Parse;
use Date::Format;
use PDL::NiceSlice;

sub hi2_tranche {
    my $date = shift;
    my $opt = shift;

    $opt = {} unless defined($opt);

    $defaults = {
	TRANCHE_LENGTH	=> 60,                                       # days
        L1_dir          => "/net/helio/d0/stereo/L1/a/img/hi_2"
    };

    for $k(keys %$defaults) {
	$opt->{$k} = $defaults->{$k} unless exists($opt->{$k});
    }

    ##############################
    # Find the date range and go retrieve the file names
    $date = str2time($date);
    $halflength = ( $opt->{TRANCHE_LENGTH}/2 * 24 * 3600 );
    print "date=$date\n";
    @files = ();
    for($t = $date - $halflength; $t <= $date+$halflength; $t += 3600 * 24) {
	$day = time2str("%Y%m%d",$t);
	$s = $opt->{L1_dir}."/".$day."/*";
	push(@files, eval "<$s>");
    }

    ##############################
    # Run the metapipeline 
    $opt->{BATCH_PREFIX} = "T_".time2str("%Y%m%d",$date);
    hi2_metapipeline(\@files, $opt);
}
    
